{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/employee.ts","./src/app/services/userauth.service.ts","./src/app/signup/_helpers/must-match.validator.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  {path: 'login', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'home', component: HomeComponent},  \n  {path: 'header', component: HeaderComponent} \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'apiapp';\n}\n","\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SignupComponent,\n    LoginComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <a class=\"navbar-brand\" href=\"#\">My Project</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      \r\n        <div class=\"collapse navbar-collapse home__right\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n              <a class=\"nav-link\" href=\"#\" routerLink=\"home\">Home</a>\r\n            </li>        \r\n            <li class=\"nav-item dropdown\">\r\n              <a class=\"nav-link\" routerLink=\"contact\" href=\"#\" tabindex=\"-1\">Contact</a>\r\n              </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"about\" href=\"#\" tabindex=\"-1\">About</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/signup\" href=\"#\" tabindex=\"-1\">SignUp</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/login\" href=\"#\" tabindex=\"-1\">LogIn</a>\r\n            </li>\r\n          </ul>\r\n          <form class=\"form-inline my-2 my-lg-0\">\r\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    \r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserauthService } from '../services/userauth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n   \n\n  constructor(private formBuilder: FormBuilder, private userauth1:UserauthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n    });\n\n    }\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n      this.submitted = true;\n      if (this.loginForm.valid) {\n        this.userauth1.login(this.loginForm.value).subscribe(result => {\n          if(result.success) {\n            console.log(result);\n            alert(result.message);\n          }else {\n            alert(result.message)\n          }\n        });\n          return;\n      }\n}\n}\n","<div class=\"container\">\n    \n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"login-form\">\n    <h2>User Login</h2>\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" id=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" id=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n        </div>\n    </div>\n    <div class=\"form-group logsubmit\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\" (click)=\"onSubmit()\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Login\n        </button>\n        <a routerLink=\"/signup\" class=\"btn btn-link\">Register</a>\n    </div>\n</form>\n</div>\n","export class Employee {\n    id: number;\n    username: string;    \n    phone: number;\n    email: string;\n    password: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Employee } from '../models/employee';\nimport { Observable, throwError } from 'rxjs';\nimport { baseUrl } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserauthService {\n\n  base_path = 'http://localhost:3000/employee';\n\n  constructor(private http: HttpClient) { }\n\n  login(data):Observable<any>{\n    return this.http.post(baseUrl, data);\n\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n  createItem(item): Observable<Employee> {\n    return this.http\n    .post<Employee>(this.base_path, JSON.stringify(item), this.httpOptions)\n    \n  }\n}\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport {MustMatch} from './_helpers/must-match.validator';\nimport { Employee } from '../models/employee';\nimport { UserauthService } from '../services/userauth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  data: Employee;\n\n  constructor(private formBuilder: FormBuilder, public userauth:UserauthService, public router:Router) {\n    this.data = new Employee();\n   }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required, Validators.minLength(6)],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n    }, {\n          validator: MustMatch('password', 'confirmPassword')\n      });\n}\n\nget f() { return this.registerForm.controls; }\nonSubmit() {\n  this.submitted = true;\n  this.userauth.createItem(this.data).subscribe((response)=>\n  this.router.navigate(['']));\n\n  if (this.registerForm.invalid) {\n    return;\n  }\n\n  \n  alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value, null, 4));\n}\n\nonReset() {\n  this.submitted = false;\n  this.registerForm.reset();\n}\n}\n","<div class=\"container\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"login-form\">\n            <h5>Registration Form</h5>            \n                <div class=\"form-group\">\n                    <input placeholder=\"User Name\" id=\"username\" type=\"text\" formControlName=\"userName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userName.errors }\" [(ngModel)]=\"data.username\" />\n                    <div *ngIf=\"submitted && f.userName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.userName.errors.required\">First Name is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input placeholder=\"Phone\" id=\"phone\" type=\"text\" formControlName=\"phone\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" [(ngModel)]=\"data.phone\" />\n                    <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.phone.errors.required\">Phone number is required</div>\n                    </div>\n                </div>\n            \n            <div class=\"form-group\">\n                <input placeholder=\"Email\" id=\"email\" type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" [(ngModel)]=\"data.email\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                </div>\n            </div>\n            \n                <div class=\"form-group\">\n                    <input placeholder=\"Password\" id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" [(ngModel)]=\"data.password\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input placeholder=\"Confirm Password\" type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n                    <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                        <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n                    </div>\n                </div>\n            \n            <div class=\"form-group text-center checkbox\">\n                <input type=\"checkbox\" formControlName=\"acceptTerms\" id=\"acceptTerms\" class=\"form-check-input\" [ngClass]=\"{ 'is-invalid': submitted && f.acceptTerms.errors }\" />\n                <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\n                <div *ngIf=\"submitted && f.acceptTerms.errors\" class=\"invalid-feedback\">Accept Ts & Cs is required</div>\n            </div>\n            <div class=\"text-center\">\n                <button class=\"btn btn-primary mr-1 buttonspace\" (click)=\"onSubmit()\">Register</button>\n                <button class=\"btn btn-secondary\" type=\"reset\" (click)=\"onReset()\">Reset</button>\n            </div>\n        </form>    \n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\nexport const baseUrl = \"http://localhost:3000/employee\";\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}